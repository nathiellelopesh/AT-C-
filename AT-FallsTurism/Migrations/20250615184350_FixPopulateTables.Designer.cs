// <auto-generated />
using System;
using AT_FallsTurism.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AT_FallsTurism.Migrations
{
    [DbContext(typeof(FallsTurismContext))]
    [Migration("20250615184350_FixPopulateTables")]
    partial class FixPopulateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AT_FallsTurism.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email_cliente");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nome_cliente");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "maria@email.com",
                            Nome = "Maria Silva"
                        },
                        new
                        {
                            Id = 2,
                            Email = "leandro@email.com",
                            Nome = "Leandro Santos"
                        });
                });

            modelBuilder.Entity("AT_FallsTurism.Models.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_destino");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nome_destino");

                    b.Property<int?>("PacoteTuristicoId")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pais_destino");

                    b.HasKey("Id");

                    b.HasIndex("PacoteTuristicoId");

                    b.ToTable("Destinos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Rio de Janeiro",
                            Pais = "Brasil"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Munique",
                            Pais = "Alemanha"
                        });
                });

            modelBuilder.Entity("AT_FallsTurism.Models.PacoteTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pacote_turistico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int")
                        .HasColumnName("capacidade_pacote_turistico");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_pacote_turistico");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco_pacote_turistico");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("titulo_pacote_turistico");

                    b.HasKey("Id");

                    b.ToTable("PacotesTuristicos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacidadeMaxima = 5,
                            DataInicio = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 560m,
                            Titulo = "Aventura no Rio"
                        },
                        new
                        {
                            Id = 2,
                            CapacidadeMaxima = 7,
                            DataInicio = new DateTime(2026, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 1940m,
                            Titulo = "Charme de Munique"
                        },
                        new
                        {
                            Id = 3,
                            CapacidadeMaxima = 9,
                            DataInicio = new DateTime(2026, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 1840m,
                            Titulo = "Inverno na Europa"
                        },
                        new
                        {
                            Id = 4,
                            CapacidadeMaxima = 6,
                            DataInicio = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 1240m,
                            Titulo = "Conheça a Patagônia"
                        });
                });

            modelBuilder.Entity("AT_FallsTurism.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_reserva");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_reserva");

                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PacoteTuristicoId");

                    b.ToTable("Reservas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            DataReserva = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PacoteTuristicoId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            DataReserva = new DateTime(2025, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PacoteTuristicoId = 2
                        });
                });

            modelBuilder.Entity("AT_FallsTurism.Models.Destino", b =>
                {
                    b.HasOne("AT_FallsTurism.Models.PacoteTuristico", null)
                        .WithMany("Destinos")
                        .HasForeignKey("PacoteTuristicoId");
                });

            modelBuilder.Entity("AT_FallsTurism.Models.Reserva", b =>
                {
                    b.HasOne("AT_FallsTurism.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AT_FallsTurism.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("Reservas")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("AT_FallsTurism.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AT_FallsTurism.Models.PacoteTuristico", b =>
                {
                    b.Navigation("Destinos");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
